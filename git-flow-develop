cmd_merge() {
	#if has "$ORIGIN/$DEVELOP_BRANCH" $(git_remote_branches); then
  #  
	#	git_do fetch -q "$ORIGIN" "$DEVELOP_BRANCH"	
  #  git_do merge "$ORIGIN" "$DEVELOP_BRANCH"
	#	git_do push "$ORIGIN" "$DEVELOP_BRANCH"
	#fi

	if has "$ORIGIN/$DEVELOP_BRANCH" $(git_remote_branches); then
		require_branches_equal "$DEVELOP_BRANCH" "$ORIGIN/$DEVELOP_BRANCH"
	fi

	git_do checkout "$MASTER_BRANCH"
	git_do fetch -q "$ORIGIN" "$MASTER_BRANCH 
	git_do merge "$ORIGIN" "$MASTER_BRANCH 
	git_do merge --squash "$ORIGIN" "$DEVELOP_BRANCH"

	git_do commit -n
	#git_do merge "$DEVELOP_BRANCH"
	git push "$ORIGIN" "$MASTER_BRANCH"
	git checkout "$DEVELOP_BRANCH"
}

init() {
  require_git_repo
  gitflow_has_develop_configured
  require_gitflow_initialized
  gitflow_load_settings
}


parse_args() {
	# parse options
	FLAGS "$@" || exit $?
	eval set -- "${FLAGS_ARGV}"

	# read arguments into global variables
	NAME=$1
	BRANCH=$PREFIX$NAME
}
